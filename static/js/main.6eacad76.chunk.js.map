{"version":3,"sources":["components/routing/PrivateRoute.js","components/screens/PrivateScreen.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ForgotPasswordScreen.js","components/screens/ResetPasswordScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","PrivateScreen","history","useState","error","setError","privateData","setPrivateData","useEffect","push","fetchPrivateDate","a","config","headers","Authorization","axios","get","data","removeItem","className","onClick","LoginScreen","email","setEmail","password","setPassword","loginHandler","e","preventDefault","header","post","setItem","token","response","setTimeout","onSubmit","htmlFor","type","required","id","placeholder","onChange","target","value","tabIndex","autoComplete","RegisterScreen","username","setUsername","confirmpassword","setConfirmPassword","registerHandler","ForgotPasswordScreen","success","setSuccess","forgotPasswordHandler","ResetPasswordScreen","match","confirmPassword","resetPasswordHandler","put","params","resetToken","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6eacad76.chunk.js","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n\n        localStorage.getItem(\"authToken\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./PrivateScreen.css\";\n\n\nconst PrivateScreen = ({ history }) => {\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) {\n      history.push(\"/login\")\n    }\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n        }\n      };\n\n      try {\n        const { data } = await axios.get(\"/api/private\", config);\n        setPrivateData(data.data);\n      } catch (error) {\n        localStorage.removeItem(\"authToken\");\n        setError(\"You are not authorized please login\");\n      }\n    };\n\n    fetchPrivateDate();\n  }, [history]);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"authToken\");\n    history.push(\"/login\");\n  }\n  return error ? (\n    <span className=\"error-message\">{error}</span>\n  ) : (\n      <div className=\"private-screen login-screen\">\n        <div  className=\"flex\">{privateData}</div>\n        <button  className=\"btn btn-primary flex\" onClick={logoutHandler}>Logout</button>\n      </div>\n\n  );\n};\n\nexport default PrivateScreen;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoginScreen.css\";\n\nconst LoginScreen = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"/api/auth/login\",\n        { email, password },\n        config\n      );\n\n      localStorage.setItem(\"authToken\", data.token);\n\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"login-screen\">\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\n        <h3 className=\"login-screen__title\">Login</h3>\n        {error && <span className=\"error-message\">{error}</span>}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            tabIndex={1}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">\n            Password:{\" \"}\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\"   tabIndex={4}>\n              Forgot Password?\n            </Link>\n          </label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            tabIndex={2}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\"  tabIndex={3} >\n          Login\n        </button>\n\n        <span className=\"login-screen__subtext\">\n          Don't have an account? <Link to=\"/register\">Register</Link>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./RegisterScreen.css\";\n\nconst RegisterScreen = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"/api/auth/register\",\n        {\n          username,\n          email,\n          password,\n        },\n        config\n      );\n\n      localStorage.setItem(\"authToken\", data.token);\n\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"register-screen\">\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\n        <h3 className=\"register-screen__title\">Register</h3>\n        {error && <span className=\"error-message\">{error}</span>}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Username:</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"confirmpassword\"\n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Register\n        </button>\n\n        <span className=\"register-screen__subtext\">\n          Already have an account? <Link to=\"/login\">Login</Link>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterScreen;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordScreen.css\";\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"/api/auth/forgotpassword\",\n        { email },\n        config\n      );\n\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"forgotpassword-screen\">\n      <form\n        onSubmit={forgotPasswordHandler}\n        className=\"forgotpassword-screen__form\"\n      >\n        <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\n        {error && <span className=\"error-message\">{error}</span>}\n        {success && <span className=\"success-message\">{success}</span>}\n        <div className=\"form-group\">\n          <p className=\"forgotpassword-screen__subtext\">\n            Please enter the email address you register your account with. We\n            will send you reset password confirmation to this email\n          </p>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Send Email\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPasswordScreen;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./ResetPasswordScreen.css\";\n\nconst ResetPasswordScreen = ({  match }) => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/passwordreset/${match.params.resetToken}`,\n        {\n          password,\n        },\n        config\n      );\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"resetpassword-screen\">\n      <form\n        onSubmit={resetPasswordHandler}\n        className=\"resetpassword-screen__form\"\n      >\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\n        {error && <span className=\"error-message\">{error} </span>}\n        {success && (\n          <span className=\"success-message\">\n            {success} <Link to=\"/login\">Login</Link>\n          </span>\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">New Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            placeholder=\"Enter new password\"\n            autoComplete=\"true\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"confirmpassword\"\n            placeholder=\"Confirm new password\"\n            autoComplete=\"true\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordScreen;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Routing\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n// Screens\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PrivateScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/register\" component={RegisterScreen} />\n          <Route\n            exact\n            path=\"/forgotpassword\"\n            component={ForgotPasswordScreen}\n          />\n          <Route\n            exact\n            path=\"/passwordreset/:resetToken\"\n            component={ResetPasswordScreen}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}